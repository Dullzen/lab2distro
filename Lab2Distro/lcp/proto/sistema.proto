syntax = "proto3";
option go_package = "grpc-server/proto";
package sistema;

// =======================
// Mensajes comunes
// =======================

message Entrenador {
  string id = 1;
  string nombre = 2;
  string region = 3;
  int32 ranking = 4;
  string estado = 5;
  int32 suspension = 6;
}

message ListaEntrenadores {
  repeated Entrenador entrenadores = 1;
}

message ResultadoOperacion {
  bool exito = 1;
  string mensaje = 2;
}

// =======================
// Torneos
// =======================

message InfoTorneo {
  string nombre = 1;
  string estado = 2;
  string ganadorId = 3;
  string ganadorNombre = 4;
  int32 numParticipantes = 5;
  string torneoId = 6;  // Nuevo campo para ID del torneo
}

message ListaTorneos {
  repeated InfoTorneo torneos = 1;
}

message SolicitudInscripcion {
  string entrenadorId = 1;
  string entrenadorNombre = 2;
  string entrenadorRegion = 3;
  int32 entrenadorRanking = 4;
}

// =======================
// LCP
// =======================

service LCPService {
  rpc ObtenerListaEntrenadores(Empty) returns (ListaEntrenadores);
  rpc ObtenerTorneos(Empty) returns (ListaTorneos);
  rpc InscribirEntrenador(SolicitudInscripcion) returns (ResultadoOperacion);
  rpc AsignarCombate(SolicitudCombate) returns (ResultadoCombate);
  rpc RegistrarEntrenador(Entrenador) returns (ResultadoOperacion);
  rpc EnviarResultadoCombate(ResultadoCombateDesdeRabbit) returns (ResultadoOperacion);
  rpc VerificarEntrenadores(VerificacionEntrenadores) returns (ResultadoVerificacion);
  rpc NotificarCambioRanking(RankingUpdate) returns (RankingUpdateResponse);
}

message Empty {}

message SolicitudCombate {
  string combate_id = 1;
  string torneo_id = 2;
  string entrenador1_id = 3;
  string entrenador2_id = 4;
  string gimnasio_nombre = 5; // Campo nuevo
  string gimnasio_region = 6; // Campo nuevo
  int32 entrenador1_ranking = 7; // Nuevo campo para ranking del primer entrenador
  int32 entrenador2_ranking = 8; // Nuevo campo para ranking del segundo entrenador
}

message ResultadoCombate {
  string combateId = 1;
  string torneoId = 2;
  string ganadorId = 3;
  string ganadorNombre = 4;
  bool error = 5;
  string mensaje = 6;
}

// =======================
// CDP
// =======================

message ResultadoCombateDesdeRabbit {
  string combate_id = 1;
  string torneo_id = 2;
  string ganador_id = 3;
  string entrenador1_id = 4;
  string entrenador2_id = 5;
  string gimnasio_nombre = 6;
  string region = 7;
  string fecha_combate = 8;
}

message VerificacionEntrenadores {
  repeated string entrenadorIds = 1;
}

message ResultadoVerificacion {
  bool todosValidos = 1;
  string mensaje = 2;
}

// Message for ranking updates
message RankingUpdate {
  string entrenador_id = 1;
  int32 ranking_anterior = 2;
  int32 ranking_nuevo = 3;
  string torneo_id = 4; // Optional, to identify which tournament caused the change
}

// Response after processing the ranking update
message RankingUpdateResponse {
  bool exito = 1;
  string mensaje = 2;
}


